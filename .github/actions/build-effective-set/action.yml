name: 'Build Effective Set Generator Docker Image'
description: 'Build and push Effective Set Generator docker image to container registry'

inputs:
  registry:
    description: 'Container registry URL'
    required: false
    default: 'ghcr.io'
  image-name:
    description: 'Docker image name'
    required: false
    default: '${{ github.repository }}/qubership-effective-set-generator'
  dockerfile-path:
    description: 'Path to Dockerfile'
    required: false
    default: './build_effective_set_generator_java/Dockerfile'
  pom-path:
    description: 'Path to Maven POM file'
    required: false
    default: './build_effective_set_generator_java/pom.xml'
  git-user:
    description: 'Git username for build args'
    required: false
  git-token:
    description: 'Git token for build args'
    required: false
  github-token:
    description: 'GitHub token for registry login'
    required: true

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build JAR with Maven
      shell: bash
      run: |
        mvn --batch-mode package -Dgpg.skip=true -f ${{ inputs.pom-path }}

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.image-name }}
    
    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ inputs.dockerfile-path }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          GIT_USER=${{ inputs.git-user }}
          GIT_TOKEN=${{ inputs.git-token }} 