name: "Dev: Build Qubership GCIP dockerimage"

run-name: "Build Qubership GCIP for commit ${{ github.sha }}"

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: netcracker/qubership-gcip
  CRED_ROTATION_IMAGE: netcracker/credential-rotation

jobs:
  tests:
    uses: ./.github/workflows/perform_tests.yml
  
  build-and-push-image:
    needs: [tests]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Metadata for Credential Rotation Image
      - name: Extract metadata for Credential Rotation image
        id: meta-creds
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.CRED_ROTATION_IMAGE }}
      
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./build_gcip/build/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_USER=${{ secrets.GIT_USER }}
            GIT_TOKEN=${{ secrets.GIT_TOKEN }}

      # Build and push Credential Rotation Docker image
      - name: Build and push Credential Rotation Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./creds_rotation/build/Dockerfile
          push: true
          tags: ${{ steps.meta-creds.outputs.tags }}
          labels: ${{ steps.meta-creds.outputs.labels }}
          build-args: |
            GIT_USER=${{ secrets.GIT_USER }}
            GIT_TOKEN=${{ secrets.GIT_TOKEN }}