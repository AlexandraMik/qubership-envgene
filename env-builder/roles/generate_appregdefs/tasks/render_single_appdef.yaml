---
- name: Ensure tmp_render_dir fact is set
  set_fact:
    tmp_render_dir: "{{ tmp_render_dir | default('/tmp') }}"

- name: Prepare appdefs dict for Jinja context
  set_fact:
    appdefs:
      overrides: "{{ appdefs_overrides }}"

- name: Extract template base name (for output naming)
  set_fact:
    template_name: "{{ item.path | basename | regex_replace('\\.j2$', '') }}"

- name: Render AppDef template using Jinja
  template:
    src: "{{ item.path }}"
    dest: "{{ tmp_render_dir }}/{{ template_name }}.{{ render_timestamp }}.rendered.appdef.yml"
  vars:
    appdefs:     "{{ appdefs }}"
    current_env: "{{ current_env }}"

- name: Set rendered AppDef path
  set_fact:
    appdef_rendered_path: "{{ tmp_render_dir }}/{{ template_name }}.{{ render_timestamp }}.rendered.appdef.yml"

- name: Read rendered AppDef file into string
  slurp:
    src: "{{ appdef_rendered_path }}"
  register: appdef_rendered_slurp

- name: Decode rendered AppDef string
  set_fact:
    appdef_raw_rendered: "{{ appdef_rendered_slurp.content | b64decode }}"

- name: Parse rendered AppDef YAML into dict
  set_fact:
    appdef_parsed: "{{ appdef_raw_rendered | from_yaml }}"

- name: Extract fields from rendered AppDef
  set_fact:
    artifactId: "{{ appdef_parsed.artifactId }}"
    groupId:    "{{ appdef_parsed.groupId }}"
    appdef_name: "{{ appdef_parsed.name }}"

- name: Save final rendered AppDef
  copy:
    content: "{{ appdef_raw_rendered }}"
    dest: "{{ current_env_dir }}/AppDefs/{{ appdef_name }}.appdef.yml"
    mode: '0644'
  when: appdef_name is defined and appdef_name | length > 0
