---

- name: Initialize variable with template file
  set_fact:
    template_path: "{{ env_file.template_path }}"

- name: Validate template file
  stat:
    path: "{{ template_path }}"
  register: template_existence

- name: Fail if template file is missing
  fail:
    msg: "Template file {{ template_path }} is not found!"
  when: not template_existence.stat.exists

- name: Extract Namespace
  set_fact:
    extracted_namespace: >-
      {%- set content = lookup('file', template_path).split('\n') -%}
      {%- set ns_line = content | select('match', '^\\s*name:') | list | first -%}
      {%- if ns_line -%}
        {{- ns_line.split(':', 1)[1] | trim | replace('"', '') -}}
      {%- else -%}
        {{- '' -}}
      {%- endif -%}

- name: Update the syntax for variables
  set_fact:
    current_namespace: "{{ extracted_namespace | regex_replace('({{)\\s*([^}\\s]+)\\s*(}})', '\\1 \\2 \\3') }}"

- name: Initialize environment entry
  set_fact:
    all_environments: "{{ all_environments | combine({template_path: {}}, recursive=true) }}"

- name: Transform applications
  set_fact:
    all_environments: >-
      {%- set ns = namespace(result=all_environments) -%}
      {%- set template_base = template_path | basename | splitext | first | splitext | first -%}
      {%- for app in applications -%}
        {%- if app.deployPostfix == template_base -%}
          {%- set app_parts = app.version.split(':', 1) -%}
          {%- if app_parts | length >= 2 -%}
            {%- set app_name = app_parts[0] | trim -%}
            {%- set entry = {
                'deployPostfix': app.deployPostfix,
                'namespace': current_namespace,
                'version': app_parts[1] | trim
              } -%}
            {%- set env_data = ns.result[template_path] | combine({app_name: entry}, recursive=true) -%}
            {%- set _ = ns.result.update({template_path: env_data}) -%}
          {%- endif -%}
        {%- endif -%}
      {%- endfor -%}
      {{ ns.result }}
