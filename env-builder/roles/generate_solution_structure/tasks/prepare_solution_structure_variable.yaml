---

- name: Initialize variable with template file
  set_fact:
    template_path: "{{ env_file.template_path }}"

- name: Validate template file
  stat:
    path: "{{ template_path }}"
  register: template_existence

- name: Fail if template file is missing
  fail:
    msg: "Template file {{ template_path }} is not found!"
  when: not template_existence.stat.exists

- name: Extract Namespace
  set_fact:
    current_namespace: >-
      {%- set content = lookup('file', template_path).split('\n') -%}
      {%- for line in content if line.strip().startswith('name:') -%}
        {{- line.split('name:', 1)[1] | trim -}}
        {%- break -%}
      {%- endfor -%}

- name: Transform applications
  set_fact:
    all_environments: >-
      {%- set result = {} -%}
      {%- for app in applications -%}
        {%- set app_parts = app.version.split(':') -%}
        {%- set app_name = app_parts[0] | trim -%}
        {%- set app_version = app_parts[1] | trim -%}
        {%- set entry = {
            'deployPostfix': app.deployPostfix,
            'namespace': current_namespace,
            'version': app_version
          } -%}
        {%- set _ = result.update({app_name: entry}) -%}
      {%- endfor -%}
      {{ result }}
